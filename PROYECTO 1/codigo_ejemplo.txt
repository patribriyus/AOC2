formato aritméticas: 
op	rs	rt	rd	shamt	funct
000001	00001	00010  	00011  	00000	000000  ADD R3, R1, R2

formato lw, sw, beq:
op	rs	rt		inm
000010 	00000	00001 	0000000000000000 		LW  R1, 0(R0)  dir 0

V1: Con NOPS y salto retardado

separado por campos:

000010 	00000	00001 	0000000000000000 		LW  R1, 0(R0)  dir 0
000010 	01000	00010 	0000000000000100 		LW  R2, 4(R8)  dir 4
000000	00000	00000	0000000000000000		nop
000000	00000	00000	0000000000000000		nop
000001	00001	00010  	00011  	00000	000000  	ADD R3, R1, R2	       dir 16		
000000	00000	00000	0000000000000000		nop
queremos saltar a la posición 0, y el procesador calcula la dirección haciendo PC+4+ 4*Ëxt(inm) por eso ponemos fff9: 4*fff9+001C=0000		
000100	00011	00011	1111111111111001		beq r3, r3, dir0; 
000011 	00100	00011 	0000000000000100 		SW  R3, 4(R4)

EN hexadecimal:

	08010000	LW  R1, 0(R0)
	09020004	LW  R2, 4(R8)
	00000000	nop
	00000000	nop
 	04221800	ADD R3, R1, R2
	00000000	nop
	1063FFF9	beq r3, r3, dir0
	0C830004	SW  R3, 4(R4)

V2: Fully equipped

000010 	00000	00001 	0000000000000000 		LW  R1, 0(R0)  dir 0
000010 	01000	00010 	0000000000000100 		LW  R2, 4(R8)  dir 4
000001	00001	00010  	00011  	00000	000000  	ADD R3, R1, R2	       dir 16		
000011 	00100	00011 	0000000000000100 		SW  R3, 4(R4)
queremos saltar a la posición 0, y el procesador calcula la dirección haciendo PC+4+ 4*Ëxt(inm) por eso ponemos FFFB: 4*FFFB+0014 = 0000		
fuerzo una dependencia de datos para ver si el procesador para
000100	00011	00011	1111111111111011		beq r3, r3, dir0; 

EN hexadecimal:

	08010000	LW  R1, 0(R0)
 	09020004	LW  R2, 4(R8)
	04221800	ADD R3, R1, R2
	0C830004	SW  R3, 4(R4)
	1063FFFB	beq r3, r3, dir0; 

